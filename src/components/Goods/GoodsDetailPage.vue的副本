<template>
  <div class="GoodsDetailPage">
    <!--<div class="fixed-header">-->
      <!--<x-header :left-options="{backText: ''}">商品详情</x-header>-->
    <!--</div>-->
    <div class="GoodsDetailPage_MainContent">
      <!--商品的Banner图-->
      <div class="GoodsDetailPageScrollerDiv">
        <swiper height="375px"  v-model="banner_index" :show-dots="true" dots-position="center">
          <swiper-item class="GoodSDetailImageItem" v-for="(item, swiperIndex) in parseData.bannerList" :key="swiperIndex" @click.native="bannerClickIndex(swiperIndex, item)">
            <div class="GoodSDetailImage_div">
              <img class="GoodSDetailImage_img" v-lazy="item.img" />
            </div>
          </swiper-item>
        </swiper>
        <!--<div class="GoodSDetailIndexLabel">-->
                 <!--<span class="IndicatePlaneBg">-->
                    <!--<span class="IndicatePlane_currentIndex">{{ banner_index+1 }} /</span>-->
                    <!--<span class="IndicatePlaneBg_TotalIndex">{{ banner_list.length }}</span>-->
                 <!--</span>-->
        <!--</div>-->
      </div>
      <!--商品具体的名字，租金，以及商品价值的展示-->
      <div class="GoodsCategoryPlane">
        <!--商品详情部分-->
        <div class="GoodsConfigDetailPlane">
          <span class="GoodsConfigDetailPlane_info">{{ commodities.fullName }}</span>
          <!--stock_status_normal stock_status_empty -->
          <span v-bind:class="stockBtnClass">{{ isStockNumEmpty }}</span>
        </div>
        <div class="Goods_least_sign_price">
          <span class="Goods_rent_price_value">日均租金:<em> ￥{{ leaseForOneDayPrice }}</em> </span>
          <span class="Goods_rent_price_unit">/天起</span>
        </div>
        <div class="Good_sign_Price_Plane">
          <div class="Good_Sign_Price_Value">
            <template v-if="!isUserChooseGoods">
              市场价: ￥{{ minMarketPrice }} 起
            </template>
            <template v-else>
              市场价: ￥{{ goodssignPrice || 0 }}
            </template>
          </div>
          <!--机器到期买断价=商品价值*买断系数-已付租金-->
          <!--<button class="rentButton" @click="goNext">立即下单</button>-->
        </div>
        <div class="safeguardMark">
          <img src="./safeguardMark.png" />
        </div>
        <!-- <div class="buy-out-tip vux-1px-t">
          <span class="vux-1px">买断系数: {{ buyOutRadio }}%</span>
          <span>机器到期买断价=商品价值*买断系数-已付租金</span>
        </div> -->
      </div>
      <div class="padding-line"></div>
      <!--商品规格选择面板-->
      <!--<div class="ConfigCategoryPlane">-->
        <!--<div class="ConfigCategoryPlane_Item" v-for="(item, index) in parseData.categoryTable" :key="index">-->
          <!--<span class="ConfigCategoryPlane_Item_title">{{ item.specName }}</span>-->
          <!--<div class="ConfigCategoryPlane_Item_subPlane">-->
          <!--<span v-for="(subItem, subIndex) in item.Array" :key="subIndex" v-bind:data-Item="subItem" v-bind:class="{ 'ConfigCategoryPlane_Item_subPlane_subItem_select': categoryItemChooseClass(subItem, 2), 'ConfigCategoryPlane_Item_subPlane_subItem_normal':(subItem.Status === 0),  'ConfigCategoryPlane_Item_subPlane_subItem_disable':(subItem.Status === 1)}"-->
                 <!--v-on:click="categoryItemClick(subItem)">-->
            <!--{{ subItem.specContent }}-->
          <!--</span>-->
          <!--</div>-->
        <!--</div>-->
        <!--<div class="ConfigCategoryPlane_Item" v-show="isUserChooseGoods">-->
          <!--<span class="ConfigCategoryPlane_Item_title">租用时间</span>-->
          <!--<div class="ConfigCategoryPlane_Item_subPlane">-->
          <!--<span-->
            <!--v-bind:class="{ 'ConfigCategoryPlane_Item_subPlane_subItem_select': finalproductNoIsSelected(finanicialItem), 'ConfigCategoryPlane_Item_subPlane_subItem_normal': !finalproductNoIsSelected(finanicialItem)}"-->
            <!--v-for="(finanicialItem, finanicialIndex) in this.userChooseGood['listProduct']" :key="finanicialIndex"-->
            <!--v-on:click="financialItemClick(finanicialItem)">-->
            <!--{{ finanicialItem.totalDays }}天-->
          <!--</span>-->
          <!--</div>-->
        <!--</div>-->
        <!--<div class="ConfigCategoryPlane_Item" v-show="isUserChooseFinancialProduct && isUserChooseGoods">-->
          <!--<div>-->
            <!--<div class="ConfigCategoryPlane_Fee_Item"  v-for="(additionalItem, index) in additionalFeeList" :key="index">-->
              <!--<div class="ConfigCategoryPlane_Fee_Item_left">-->
                <!--<i class="icon iconfont icon-danxuan icon-Raidobox-selectedRai1"></i>-->
                <!--<span class="ConfigCategoryPlane_Fee_Item_left">{{ feeItemNameDesc(additionalItem) }} (必选)</span>-->
              <!--</div>-->
              <!--<div class="ConfigCategoryPlane_Fee_Item_right" @click="feeDescItemClick(additionalItem)"><i class="icon iconfont icon-help1"></i></div>-->
            <!--</div>-->
          <!--</div>-->
          <!--<div class="ConfigCategoryPlane_Fee_Item" v-for="(feeItem, feeIndex) in optionalFeeList" :key="feeIndex">-->
            <!--<div class="ConfigCategoryPlane_Fee_Item_left" @click="feeListItemClick(feeItem)">-->
              <!--<i  v-bind:class="feeListCircleClassObject(feeItem)"></i>-->
              <!--<span class="ConfigCategoryPlane_Fee_Item_left">{{ feeItemNameDesc(feeItem) }}</span>-->
            <!--</div>-->
            <!--<div class="ConfigCategoryPlane_Fee_Item_right" @click="feeDescItemClick(feeItem)"><i class="icon iconfont icon-help1"></i></div>-->
          <!--</div>-->
        <!--</div>-->
      <!--</div>-->
      <!--<div class="padding-line"></div>-->
      <!--商品图文说明 和 租赁说明的展示框-->
      <div class="GoodsDetailTabDeclarePlane">
        <tab :line-width=3 custom-bar-width="60px"  active-color='#FFDA29' v-model="declarePlaneIndex">
          <tab-item class="vux-center" :selected="declarePlaneDefault === item" v-for="(item, declareIndex) in declareList" @click="declarePlaneDefault = item" :key="declareIndex">{{item}}</tab-item>
        </tab>
        <div v-bind:class="{'GoodsDetailTabDeclarePlane_Plane':true, 'GoodDetailTabDeclarePlane_hidden':declarePlaneIndex != 0}">
          <!--<canvas  id="myCanvas"></canvas>-->
          <img class="GoodsDetailTabDeclarePlane_Plane_img" v-for="(detailImageItem, detailImageIndex) in detailImageTextList" :key="detailImageIndex" v-lazy="detailImageItem" />
        </div>
        <div v-bind:class="{'GoodsDetailTabDeclarePlane_Plane':true, 'GoodDetailTabDeclarePlane_hidden':declarePlaneIndex != 1}">
          <lease-description adv-title="物主手机" :left-day="60"></lease-description>
        </div>
      </div>
    </div>
    <div class="GoodsDetail_Bottom_fixed vux-1px-t">
      <div class="GoodsDetail_Bottom_fixed_Content">
        <div class="leftSection">
          <span class="GoodsDetail_Bottom_fixed_Content_left GoodsDetail_Bottom_fixed_Content_txt1">日均租金</span>
          <span class="GoodsDetail_Bottom_fixed_Content_left GoodsDetail_Bottom_fixed_Content_txt2"><em> ￥{{ leaseForOneDayPrice }}</em></span>
          <span class="GoodsDetail_Bottom_fixed_Content_left GoodsDetail_Bottom_fixed_Content_txt3">/天起</span>
        </div>
        <!--submitOrderBtn_disable submitOrderBtn_normal -->
        <div @click="goNext" v-bind:class="submitOrderBtnClass">立即下单</div>
      </div>
    </div>
    <goods-category-plane :wxReady="wxReady"
                          :parse-data="parseData"
                          :user-choose-good="userChooseGood"
                          :user-choose-financial-product="userChooseFinancialProduct"
                          :stock-empty="stockEmpty"
                          :parse-storage-flag="parseStorageFlag"
                          @hideClick="planeHideClick"
                          v-show="categoryPlaneShow">
    </goods-category-plane>
    <!--<fee-desc-alert :showScrollBox="showScrollBox" :potocol-type="true" :dialogTitle="dialogTitle" :dialogContent="dialogContent" @sureBtnClick="feeDescItemClick()">-->
      <!--<div  v-html="dialogContent" slot="htmlPocotol"></div>-->
    <!--</fee-desc-alert>-->
    <!--<toast v-model="reminderShow" type="text" width="20em">{{ reminderInfoMessage }}</toast>-->
  </div>
</template>

<script>
import {
  Swiper,
  SwiperItem,
  XHeader,
  CheckIcon,
  Tab,
  TabItem,
  Flexbox,
  FlexboxItem,
  XDialog,
  TransferDomDirective as TransferDom,
  Toast
} from 'vux';
import LeaseDescription from './LeaseDescription';
import feeDescAlert from './../FeeItemSubView/FeeDescAlert';
import rentalCacheTool from './../../cacheUtil/rentalCacheTool';
import { configWX, GetLocation, isWeiXin } from './../../util/utils';
import { getFeeDescStr } from './../../wuzhuUtil/wuzhuUtil';
import { CategoryStatus, ParseData } from './GoodsCategoryTool'
import GoodsCategoryPlane from './GoodsCategoryPlane'

export default {
  name: 'GoodsDetailPage',
  directives: {
    TransferDom
  },
  components: {
    Swiper,
    SwiperItem,
    XHeader,
    CheckIcon,
    Tab,
    TabItem,
    Flexbox,
    FlexboxItem,
    XDialog,
    LeaseDescription,
    feeDescAlert,
    Toast,
    GoodsCategoryPlane
  },
  data() {
    return {
      parseData: {},
      commodities: {
        // 品类的详情
        fullName: '',
        detailImg: ''
      },
      banner_list: [],
      banner_index: 0,
      chooseFinancialProduct: {},
      userChooseGood: {},
      userChooseCategoryList: [],
      userChooseFinancialProduct: {},
      userChooseFeeList: [],
      additionalFeeList: [],
      optionalFeeList: [],
      demo: true,
      // 是否通过缓存的数据刷新了页面
      parseStorageFlag: false,
      // 是否有库存
      stockEmpty: false, //  是否无货  库存量为0  且限量才展示为无货
      // 图文详情展示
      detailImageTextList: [],
      declareList: ['图文详情', '租赁说明'],
      declarePlaneIndex: 0,
      declarePlaneDefault: '图文详情',
      showScrollBox: false,
      dialogTitle: '',
      dialogContent: '',
      reminderInfoMessage: '', // 错误的提示信息
      reminderShow: false,
      categoryCode: '',
      // 使用微信部分获取用户的地理位置信息
      localRequire: false, // 点击立即下单的时候回开始询问一次
      wxReady: false,
      jsApiList: ['getLocation'],
      gpsLongitude: '', // 经纬度信息的缓存
      gpsLatitude: '',
      minMarketPrice: 0, // 最低市场价
      categoryPlaneShow: false
    };
  },
  mounted: function() {
    // 清除当前的滚动
    window.scroll(0, 0);
    configWX(this, {
      // jssdk 配置
      key: 'GoodsDetailPageWX',
      // url: 'http://jinda.dafyjk.com/dist/OrderSet/IDverify',
      url: window.location.href.split('#')[0],
      jsApiList: ['getLocation']
    });
  },
  created() {
    // create 用于载入数据和进行对应网络请求来替代
    console.log('开始载入数据======================');
    this.categoryCode = this.$store.state.categoryCode;
    // // 开始调用ajax的请求 请求的URL
    let queryDetailUrl = '/wuzhu/homePageController/queryCommodityDetail';
    // 请求的参数
    let param = {
      openId: this.$store.state.othersOpenID,
      channelNo: this.$store.state.channelNo,
      categoryCode: this.categoryCode
    };
    this.$store.commit('updateLoadingStatus', { isLoading: true });
    let that = this;
    that.$http.get(queryDetailUrl, param).then(res => {
      that.$store.commit('updateLoadingStatus', { isLoading: false });
      if (res.code === '00') {
        console.log('获取商品详细成功');
        // 最低市场价
        this.minMarketPrice = this.getMinMarketPrict(res.data.listCommodity);
        // 开始解析数据
        var goodsData = res && res['data'];
        var parseData = new ParseData(goodsData);
        parseData.parseCategoryList();
        parseData.parseGoodsList();
        parseData.parseRentDayList();
        that.parseData = parseData;
        that.commodities = parseData.commodities;
        that.banner_list = parseData.bannerList;
        that.detailImageTextList = parseData.getImageTxtList();
        // 开始判断下是否需要从storage上获取
        let choose = rentalCacheTool.isRequiredGetUserChoose();
        if (choose) {
          // 从Storage中获取
          let userChooseData = JSON.parse(rentalCacheTool.getUserChooseInGoodsDetail());
          that.parseJsonStrFromStorage(userChooseData);
        } else {
          // DO Nothing
        }
      }
    });
  },
  computed: {
    // 根据当前的库存数量来展示对应的 立即下单按钮 以及 有货和无货的状态
    //  <!--stock_status_normal stock_status_empty -->
    stockBtnClass: function() {
      if (this.stockEmpty === true) {
        return 'stock_status_empty';
      } else {
        return 'stock_status_normal';
      }
    },
    // <!--submitOrderBtn_disable submitOrderBtn_normal -->
    submitOrderBtnClass: function() {
      if (this.stockEmpty === true) {
        return 'submitOrderBtn_disable';
      } else {
        return 'submitOrderBtn_normal';
      }
    },
    // 只有当金融产品被选定才能确定
    rentPriceForOneDay: function() {
      console.log('===================&&&&&&&&&& rentPriceForOneDay ======================');
      let fullName = this.parseData && this.parseData.commodities && this.parseData.commodities['fullName'];
      if (fullName !== undefined) {
        return fullName;
      } else {
        return ' ';
      }
    },
    // 选定商品之后就能确定商品价值了
    goodssignPrice: function() {
      let price = this.commodities && this.commodities['leastSignPrice'];
      let signPrice = this.userChooseGood && this.userChooseGood['marketPrice'];
      if (signPrice !== undefined) {
        price = signPrice;
      }
      return price;
    },
    // 新增买断细数的展示
    buyOutRadio: function() {
      let radio = this.commodities && this.commodities['buyoutRatio'];
      if (radio === undefined) {
        radio = '';
      }
      return radio;
    },
    // 用户是否选定了商品
    isUserChooseGoods: function() {
      let commodityNo = this.userChooseGood['commodityNo'];
      if (commodityNo !== undefined) {
        return true;
      } else {
        return false;
      }
    },
    //  用户是否选定了金融产品
    isUserChooseFinancialProduct: function() {
      let financialNo = this.userChooseFinancialProduct['productNo'];
      if (financialNo !== undefined) {
        return true;
      } else {
        return false;
      }
    },
    //  显示有货和没货的逻辑
    isStockNumEmpty: function() {
      if (this.stockEmpty) {
        return '无货';
      } else {
        return '有货';
      }
    },
    // let stockNum = this.userChooseGood && this.userChooseGood['stockNum']
    // console.log('当前商品库存为:' + stockNum)
    // if (stockNum === undefined) {
    //   // 说明用户尚未选择
    //   this.stockEmpty = false
    //   return '有货'
    // } else {
    //   if (stockNum) {
    //     this.stockEmpty = false
    //     return '有货'
    //   } else {
    //     let isLimited = this.userChooseGood && this.userChooseGood['isLimited']
    //     if (isLimited === '0') {  // '0' 表示非限量
    //       this.stockEmpty = false
    //       return '有货'
    //     } else {                  // '1' 表示限量
    //       this.stockEmpty = true
    //       return '无货'

    //  显示当前金融产品日租金的逻辑
    leaseForOneDayPrice: function() {
      let price = this.commodities && this.commodities['leastRentDay'];
      let avgRentAmt = this.userChooseFinancialProduct && this.userChooseFinancialProduct['avgRentAmt'];
      console.log('price \t' + price + 'avgRentAmt\t' + avgRentAmt);
      // console.log('this.userChooseFinancialProduct = ' + JSON.stringify(this.userChooseFinancialProduct))
      if (avgRentAmt !== undefined) {
        price = avgRentAmt;
      }
      return price;
    }
  },
  watch: {
    userChooseCategoryList(newval, oldval) {
      if (this.parseStorageFlag) {
        this.parseStorageFlag = false
        return
      }
      this.stockEmpty = false;
      this.userChooseGood = {};
      this.userChooseFinancialProduct = {};
      // 用户是否完成选择
      if (newval.length === this.parseData.categoryTable.length) {
        let cateGoryItem = newval[0];
        let productIndex = cateGoryItem.findGoodsIndexOfMyGoods(newval);
        if (productIndex !== -1) {
          let categoryChoose = cateGoryItem.MyGoods[productIndex];
          this.userChooseGood = this.parseData.commodities.listCommodity[categoryChoose.goodsIndex]
          // 开始查询当前商品的库存信息
          this.queryCommodityStoreNum(this.userChooseGood.commodityNo);
        } else {
          console.log('程序选择存在着 bug 请注意。。。。。');
        }
      } else {
        // this.stockEmpty = false;
        // this.userChooseGood = {};
        // this.userChooseFinancialProduct = {};
      }
    },
    userChooseFinancialProduct(newval, oldval) {
      let financialNo = newval['productNo'];
      if (financialNo !== undefined) {
        this.userChooseFeeList = [];
        // 判断是否存在着商品溢价，如果存在，就添加商品溢价，且为必选项目
        this.additionalFeeList = [];
        this.optionalFeeList = [];
        // let extralFee = this.userChooseGood['premium']
        // console.log('商品溢价为: ====== ' + extralFee)
        // 判断当前是否费用列表是否为必选（添加到对应的列表）
        let feeList = this.userChooseFinancialProduct['listFeeInfo'];
        if (feeList !== undefined && feeList instanceof Array) {
          for (let i = 0; i < feeList.length; i++) {
            let feeItem = feeList[i];
            if (feeItem['isCancelled'] === '1') {
              this.optionalFeeList.push(feeItem);
            } else {
              this.additionalFeeList.push(feeItem);
            }
          }
        }
        // if ((extralFee !== undefined) && (extralFee.length !== 0)) {
        //   let feeName = '商品溢价' + extralFee
        //   this.additionalFeeList.push({
        //     'feeName': feeName
        //   })
        // }
      } else {
      }
    },
    userChooseGood(newval, oldval) {
      // 先判断当前数值书否存在
    }
  },
  // beforeRouteLeave(to, from, next) {
  //   window.getSelection().removeAllRanges()
  //   next()
  // },
  methods: {
    // 用于控制隐藏选择规格面板
    planeHideClick() {
      this.categoryPlaneShow = false
    },
    // 获取最低市场价
    getMinMarketPrict(listCommodity) {
      let price = 0;
      if (listCommodity && listCommodity.length > 0) {
        listCommodity.forEach((item, index) => {
          if (index > 0) {
            if (item.marketPrice < price) {
              price = item.marketPrice;
            }
          } else {
            price = item.marketPrice;
          }
        });
      }
      return price;
    },
    // 查询商品的库存信息
    queryCommodityStoreNum(commodityNo) {
      let that = this;
      let queryStoreUrl = '/wuzhu/homePageController/queryAvaliCommodityStockQty';
      // 请求的参数
      // 查询库存的信息
      let param = {
        commodityNo: commodityNo
      };
      that.$http.get(queryStoreUrl, param).then(res => {
        if (res.code === '00') {
          let storeNum = res && res['data'];
          if (storeNum === 0) {
            // 说明库存为0
            // 判断是不是限量
            let isLimited = this.userChooseGood && this.userChooseGood['isLimited'];
            if (isLimited === '0') {
              // '0' 表示非限量
              this.stockEmpty = false;
            } else {
              // '1' 表示限量
              this.stockEmpty = true;
            }
          } else {
            this.stockEmpty = false;
          }
          console.log('接口返回的数据为: ' + JSON.stringify(res));
        } else {
          console.log('接口返回的数据为: ' + JSON.stringify(res));
        }
      });
    },
    // 存储到服务器中需要的数据
    getServerJsonStr() {
      // 开始获取用户的选择规格参数
      let userChooseCategoryListTemp = [];
      // 增加日均租金字段
      for (let i = 0; i < this.userChooseCategoryList.length; i++) {
        let categoryItem = this.userChooseCategoryList[i];
        userChooseCategoryListTemp.push({
          categorySpecCode: categoryItem.categorySpecCode,
          specName: categoryItem.specName,
          specContent: categoryItem.specContent
        });
      }
      // 用户选择的产品
      let userChooseGoodTemp = {
        commodityNo: this.userChooseGood && this.userChooseGood.commodityNo,
        marketPrice: this.userChooseGood && this.userChooseGood.marketPrice,
        performanceBond: this.userChooseGood && this.userChooseGood.performanceBond
      };
      // 用户选择的金融产品
      let userChooseFinancialProductTemp = {
        productNo: this.userChooseFinancialProduct && this.userChooseFinancialProduct.productNo,
        totalDays: this.userChooseFinancialProduct && this.userChooseFinancialProduct.totalDays
      };
      // 用户选择的费用列表
      let userChooseFeeListTemp = [];
      for (let i = 0; i < this.userChooseFeeList.length; i++) {
        let feeItem = this.userChooseFeeList[i];
        userChooseFeeListTemp.push(feeItem.feeNo);
      }
      let userChooseFeeListTempStr = userChooseFeeListTemp.join(',');
      // 用户必选的费用列表
      // let additionalFeeListTemp = []
      // for (let i = 0; i < this.additionalFeeList.length; i++) {
      //   let feeItem = this.additionalFeeList[i]
      //   additionalFeeListTemp.push(
      //     feeItem.feeNo
      //   )
      // }
      // let additionalFeeListTempStr = additionalFeeListTemp.join(',')
      // 设置是否从跳转到登录页面
      var currentData = {
        leaseForOneDayPrice: this.leaseForOneDayPrice,
        localRequire: this.localRequire,
        gpsLongitude: this.gpsLongitude,
        gpsLatitude: this.gpsLatitude,
        fullName: this.parseData.commodities['fullName'],
        listImage: this.parseData.commodities['listImg'],
        userChooseGood: userChooseGoodTemp,
        userChooseCategoryList: userChooseCategoryListTemp,
        userChooseFinancialProduct: userChooseFinancialProductTemp,
        userChooseFeeInfo: userChooseFeeListTempStr,
        // additionFeeInfo: additionalFeeListTempStr
        productNo: this.userChooseFinancialProduct && this.userChooseFinancialProduct.productNo
      };
      return JSON.stringify(currentData);
    },
    // 需要缓存的数据以及对应的解析对应的数据
    getCacheJsonStr() {
      // 设置是否从跳转到登录页面
      var currentData = {
        localRequire: this.localRequire,
        gpsLongitude: this.gpsLongitude,
        gpsLatitude: this.gpsLatitude,
        fullName: this.parseData.commodities['fullName'],
        listImage: this.parseData.commodities['listImg'],
        userChooseGood: this.userChooseGood,
        userChooseCategoryList: this.userChooseCategoryList,
        userChooseFinancialProduct: this.userChooseFinancialProduct,
        userChooseFeeList: this.userChooseFeeList,
        additionalFeeList: this.additionalFeeList
      };
      return JSON.stringify(currentData);
    },
    // 解析Storage里面返回的数据
    parseJsonStrFromStorage(userChooseData) {
      // 开始配置用户测试数据
      this.parseStorageFlag = true
      this.userChooseCategoryList = userChooseData.userChooseCategoryList;
      this.userChooseGood = userChooseData.userChooseGood;
      // this.userChooseCategoryList = this.userChooseCategoryList.concat(userChooseData.userChooseCategoryList)
      this.userChooseFinancialProduct = userChooseData.userChooseFinancialProduct;
      this.userChooseFeeList = userChooseData.userChooseFeeList;
      this.additionalFeeList = userChooseData.additionalFeeList;
      this.localRequire = userChooseData.localRequire;
      this.gpsLongitude = userChooseData.gpsLongitude;
      this.gpsLatitude = userChooseData.gpsLatitude;
      // 开始清空对应Storage的存储
      rentalCacheTool.clearUserChooseInGoodsDetail();
      rentalCacheTool.clearGoodJump2LoginFlag();
    },
    // 提交订单部分的判断跳转
    checkInfoComplete() {
      if (JSON.stringify(this.userChooseGood) === '{}') {
        this.reminderInfoMessage = '请选择对应商品规格';
        this.reminderShow = true;
        return false;
      }
      if (JSON.stringify(this.userChooseFinancialProduct) === '{}') {
        this.reminderInfoMessage = '请选择您的租赁天数';
        this.reminderShow = true;
        return false;
      }
      return true;
    },
    // 调用微信的接口，获取对应的地理位置接口
    getUserLocaltion() {
      let that = this;
      that.localRequire = true; // 已经弹出过授权框了
      if (that.wxReady) {
        // 获取用户地理位置
        GetLocation({}, that)
          .then(position => {
            that.$store.commit('latMemory', { lat: position.coords.latitude });
            that.$store.commit('lngMemory', { lng: position.coords.longitude });

            that.gpsLatitude = position.coords.latitude;
            that.gpsLongitude = position.coords.longitude;
            that.orderEventSubmit();
          })
          .catch(error => {
            console.log('H5 getLocation API 错误代码:', error.code, ' 错误信息:', error.message);
            if (!isWeiXin()) {
            } else {
              // eslint-disable-next-line
              wx.getLocation({
                type: 'wgs84', // gcj02
                success: function(res) {
                  that.$store.commit('latMemory', { lat: res.latitude });
                  that.$store.commit('lngMemory', { lng: res.longitude });

                  that.gpsLatitude = res.latitude;
                  that.gpsLongitude = res.longitude;
                  that.orderEventSubmit();
                },
                cancel: function() {
                  // 用户取消情况，一样调用预约接口
                  that.orderEventSubmit();
                },
                fail: function(res) {
                  that.orderEventSubmit();
                }
              });
            }
          });
      } else {
        // 没有强制要求用户授权地理位置，所以wx没有Ready的时候也一样跳转
        that.orderEventSubmit();
      }
    },
    goNext() {
      this.categoryPlaneShow = true
      // // 如果是无货，直接返回，不能点击
      // if (this.stockEmpty === true) {
      //   return;
      // }
      // let that = this;
      // // 如果是京东渠道且是android手机则不能下单
      // // if (that.$store.state.channelNo === '003' && that.$store.state.osinfo === 'Android') {
      // //   that.$vux.alert.show({
      // //     content: '您的设备目前不支持完成该步骤，请更换设备再试',
      // //     onHide() {
      // //       that.$router.push({ name: 'HomePage' });
      // //     }
      // //   });
      // //   return;
      // // }
      // let completeCheck = that.checkInfoComplete();
      // if (completeCheck === false) {
      //   return;
      // }
      // if (that.localRequire === false) {
      //   // 保证只会执行一次
      //   that.getUserLocaltion();
      // } else {
      //   that.orderEventSubmit(); // 如果已经出现过获取地理位置的弹框
      // }
    },
    // 根据对应的返回的Step进行对应的逻辑跳转<处理> 理解下单之后的跳转逻辑
    jump2ViewArbitration(res) {
      let that = this;
      let data = res && res['data'];
      let step = data && data['step'];
      if (step !== undefined) {
        // 跳转到其他页面也一样需要存储
        let applySerialNo = data['applySerialNo'];
        that.$store.commit('updateApplySerialNo', { applySerialNo: applySerialNo });
        rentalCacheTool.saveApplyNo(applySerialNo);
        switch (step) {
          case 'CRA': {
            // 预约申请检查
            // 弹窗提示对应的错误
            that.reminderInfoMessage = res['msg'];
            that.reminderShow = true;
            break;
          }
          case 'QIV': {
            // 身份验证-身份查询
            break;
          }
          case 'CID': {
            // 身份验证
            // console.log('身份验证已经验证通过了')
            that.$store.commit('ID_INFO_BTN_STATE', { IDInfoBtnState: 'next' });
            that.$router.push({ name: 'IDverify' });
            break;
          }
          case 'CJDXB': {
            // 京东小白分
            // 直接跳转到京东小白分页面后，说明身份验证已经通过，需要将状态修改为正常，防止在小白页面提示未通过身份验证
            that.$store.commit('accountStatusMemory', { accountStatus: '正常' });
            localStorage.setItem('origin', 'GoodsDetailPage');
            that.$router.push({ name: 'Credit' });
            break;
          }
          case 'LIVE': {
            // 活体检测页面
            that.$router.push({ name: 'LivenessVerify' });
            break;
          }
          default:
            break;
        }
      } else {
        // 输出对应的错误信息
        let errorMsg = res['msg'] || '未知错误';
        that.reminderInfoMessage = errorMsg;
        that.reminderShow = true;
      }
    },
    // 开始下单的HTTP 请求 continueFlag 0-检查押金 1-不检查
    orderEventSubmit(continueFlag = 0) {
      if (continueFlag === 0) {
        localStorage.removeItem('payFullDeposit');
      } else {
        // payFullDeposit 确认预约页面用到
        localStorage.setItem('payFullDeposit', 'true');
      }
      this.$store.commit('updateContinueFlag', { continueFlag: continueFlag });
      let that = this;
      // 模块的URL http://192.168.2.8:9093/wuzhu/swagger-ui.html
      // 毛总的URL http://192.168.2.8:9093/wuzhu/customerVerController/checkReserviationApp
      // let orderUrl = 'http://192.168.2.8:9093/wuzhu/customerVerController/checkReserviationApp'
      let orderUrl = '/wuzhu/customerVerController/checkReserviationApp';
      let param = {
        continueFlag: continueFlag, // 是否进行风控; 0要, 1不要
        fromFlag: 1,
        step: 'CRA',
        openId: this.$store.state.wxOpenID,
        channelNo: this.$store.state.channelNo,
        customerId: '001',
        // loginMobile: cslTestData.phoneNumber,
        gpsLongitude: that.gpsLongitude,
        gpsLatitude: that.gpsLatitude,
        gpsAddress: '',
        gpsProvince: '',
        gpsCity: '',
        gpsCountyDistrict: '',
        commodityJsonStr: that.getServerJsonStr()
      };
      that.$store.commit('updateLoadingStatus', { isLoading: true });
      that.$http.post(orderUrl, param).then(res => {
        that.$store.commit('updateLoadingStatus', { isLoading: false });
        let code = res && res.code;
        if (code === '00') {
          // 已经进行活体
          // 只要存在就直接存储到LocalStorage里面去
          that.jump2ViewArbitration(res);
        } else if (code === '1001') {
          // 用户还未开始登陆
          // 存储用户的登录页信息
          that.beforeJumpToLoginPage();
          that.$store.commit('prevPageMemory', { prevPage: 'GoodsDetailPage' });
          that.$router.push({ name: 'InitLogin' });
        } else if (code === '6032') {
          that.$vux.alert.show({
            content: res.msg,
            onHide() {
              that.$router.push({ name: 'HomePage' });
            }
          });
        } else if (code === '6031') {
          // 您当前暂未获得信用免押资格，是否选择全额支付押金进行租赁商品。
          that.$vux.confirm.show({
            content: res.msg,
            onConfirm() {
              that.orderEventSubmit(1);
            },
            onCancel() {
              that.$router.push({ name: 'HomePage' });
            }
          });
        } else {
          that.jump2ViewArbitration(res);
        }
      });
    },
    // 如果没有登录的话，这里开始存储对应的状态，以及标记到LocalStorage方便回来的时候验证和保留用户状态
    beforeJumpToLoginPage() {
      // let currentUrl = window.location.origin
      // if (currentUrl.indexOf('com') === -1) {
      //   // 适配config里面的域名，都会包含dafyjk 直接改成 com
      //   // 如果找不到就说明本地环境<修改Store里面的openID>
      //   this.$store.commit('updateWXOpenID', { othersOpenID: 'wx9a12b852f16c0009' })
      // }
      let currentDataStr = this.getCacheJsonStr();
      rentalCacheTool.markGoodJump2LoginFlag(true);
      // 开启存储需要的信息
      rentalCacheTool.saveUserChooseInGoodsDetail(currentDataStr);
    },
    // 问号被点击出现对应的弹框进行费用说明
    feeDescItemClick(feeItem) {
      if (this.showScrollBox === true) {
        this.showScrollBox = false;
      } else {
        this.dialogTitle = feeItem.feeName + '说明';
        this.dialogContent = ' ';
        if (feeItem['feeDesc'] !== undefined) {
          this.dialogContent = feeItem['feeDesc'];
        }
        this.showScrollBox = true;
      }
    },
    categoryItemChooseClass(subItem, statusNum) {
      subItem.getMyStatus(this.userChooseCategoryList);
      // let result = (subItem.status === 2)
      // console.log('statusNum \t' + statusNum)
      // console.log(typeof (statusNum) + '\t' + typeof (subItem.Status))
      // console.log(subItem.specContent + ' \t' + subItem.Status + '\t' + result)
      return subItem.Status === statusNum;
    },
    // 跳转到详情大图的轮播图
    bannerClickIndex: function(index, item) {
      // 存储用户的信息，进行和登录一样的操作<目前跳转到详情页面采用和登录页面一样的操作>
      let currentDataStr = this.getCacheJsonStr();
      rentalCacheTool.markGoodJump2LoginFlag(true);
      // 开启存储需要的信息
      rentalCacheTool.saveUserChooseInGoodsDetail(currentDataStr);
      this.$router.push({
        name: 'ImageDetailScrollerPage',
        params: { selectedIndex: index, banner_list: this.banner_list }
      });
    },
    //  是否是当前选定的金融产品
    finalproductNoIsSelected: function(finalProductItem) {
      if (finalProductItem.productNo === this.userChooseFinancialProduct.productNo) {
        return true;
      } else {
        return false;
      }
    },
    //  用户选择金融产品的处理
    financialItemClick(financialItem) {
      let stu = this.finalproductNoIsSelected(financialItem);
      if (stu) {
        this.userChooseFinancialProduct = {};
      } else {
        this.userChooseFinancialProduct = financialItem;
      }
      // console.log(JSON.stringify(this.userChooseFinancialProduct));
    },
    categoryItemClick(subItem) {
      console.log(subItem.specContent + '=== 被点击了');
      switch (subItem.Status) {
        case CategoryStatus.Disable: {
          // 无法被点击
          // 不能被点击，所以直接返回
          break;
        }
        case CategoryStatus.Normal: {
          // 正常的状态，选剔除同类，再取代<观察选择链表的变化，凑足3个刷新产品详情>
          let sameTypeIndex = subItem.findMyCategoryFamilyIndex(this.userChooseCategoryList);
          if (sameTypeIndex === -1) {
            this.userChooseCategoryList.push(subItem);
          } else {
            this.userChooseCategoryList.splice(sameTypeIndex, 1, subItem);
          }
          break;
        }
        case CategoryStatus.Selected: {
          //  当前处于选定状态，那么就直接剔除自己
          let sameTypeIndex = subItem.findMyCategoryFamilyIndex(this.userChooseCategoryList);
          if (sameTypeIndex !== -1) {
            this.userChooseCategoryList.splice(sameTypeIndex, 1);
          }
          break;
        }
        default: {
          console.log(subItem.specContent + '\t' + ' 点击处于异常状态，请注意！！！');
        }
      }
    },
    // 判断某个费用是否在用户选择的费用列表里面<存在返回下标，不存在返回-1>
    IsInUserChooseFeeList: function(feeItem) {
      let tempIndex = -1;
      for (let i = 0; i < this.userChooseFeeList.length; i++) {
        let tempItem = this.userChooseFeeList[i];
        if (tempItem.feeNo === feeItem.feeNo) {
          tempIndex = i;
          break;
        }
      }
      return tempIndex;
    },
    // 根据用户选择圈圈部分的控制<判断该费用列表是否在用户的选择的费用列表里面>
    feeListCircleClassObject: function(feeItem) {
      let feeItemChoose = this.IsInUserChooseFeeList(feeItem) !== -1;
      return {
        'icon iconfont icon-yuanxingweixuanzhong': !feeItemChoose,
        'icon iconfont icon-danxuan': feeItemChoose
      };
    },
    // 费用列表被点击选择
    feeListItemClick(feeItem) {
      let feeItemIndex = this.IsInUserChooseFeeList(feeItem);
      if (feeItemIndex === -1) {
        // 增加该选项
        this.userChooseFeeList.push(feeItem);
      } else {
        // 删除该选项
        this.userChooseFeeList.splice(feeItemIndex, 1);
      }
    },
    // 费用的显示逻辑<支付方式，费用名称，费用计算基数>
    feeItemNameDesc(feeItem) {
      let feeName = feeItem && feeItem['feeName'];
      return feeName + '(' + getFeeDescStr(feeItem) + ')';
    }
  }
};
</script>

<style lang="less">
@import './../../common/less/index';
.GoodsDetailPage {
  background: white;
  font-family: 'PingFang SC';
  position: relative;

  /*.fixed-header{*/
  /*width: 100%;*/
  /*background: #F04655;*/
  /*height: 40px;*/
  /*z-index: 99;*/
  .vux-header {
    background-color: #ffffff !important;
    position: fixed !important;
    z-index: 100 !important;
    width: 100% !important;
  }
  .vux-header .vux-header-title {
    color: #222222 !important;
    font-size: 19px !important;
    font-family: 'PingFangSC-Regular' !important;
    background: white !important;
  }
  .GoodsDetailPage_MainContent {
    position: relative;
    /*top: 40px;*/
    .GoodsDetailPageScrollerDiv {
      .vux-icon-dot.active {
        background-color: @orange;
      }
    }
    .GoodSDetailIndexLabel {
      position: absolute;
      top: 20px;
      right: 20px;
      text-align: center;
      .IndicatePlaneBg {
        background: @gray-8;
        border-radius: 100px;
        padding: 0px 8px;
        .IndicatePlane_currentIndex {
          font-size: 13px;
          color: #000000;
          letter-spacing: 0;
          text-align: right;
        }
        .IndicatePlaneBg_TotalIndex {
          font-size: 10px;
          color: #000000;
          letter-spacing: 0;
          text-align: left;
        }
      }
    }

    .GoodSDetailImageItem {
      .GoodSDetailImage_div {
        text-align: center;
        .GoodSDetailImage_img {
          width: 100%;
        }
      }
    }

    .GoodsCategoryPlane {
      margin-left: 15px;
      margin-right: 15px;
      margin-bottom: 15px;
      margin-top: 13px;
      .GoodsConfigDetailPlane_info {
        font-size: 16px;
        font-weight: bold;
        letter-spacing: 0;
        line-height: 20px;
      }
      .stock_status_normal {
        white-space: nowrap;
        font-size: 10px;
        color: #ffffff;
        letter-spacing: 0;
        background: @orange;
        padding: 1px 2.5px;
        border-radius: 4px;
        line-height: 18px;
      }
      .stock_status_empty {
        white-space: nowrap;
        font-size: 10px;
        color: #ffffff;
        letter-spacing: 0;
        background: #ff3333;
        padding: 1px 2.5px;
        border-radius: 4px;
        line-height: 18px;
      }
      .Goods_least_sign_price {
        margin-top: 12px;
      }
    }
    .Goods_least_sign_price {
      .Goods_rent_price_value {
        font-size: 14px;
        font-weight: bold;
        color: #222222;
        letter-spacing: 0;
        line-height: 20px;
        em {
          font-style: normal;
          font-size: 16px;
          font-weight: bold;
          color: #ff4754;
        }
      }
      .Goods_rent_price_unit {
        font-size: 10px;
        color: @gray-8;
        letter-spacing: 0;
        line-height: 10px;
      }
    }
    .Good_sign_Price_Plane {
      position: relative;
      padding-bottom: 15px;
      margin-bottom: 12px;
      border-bottom: 1px solid #ddd;
      .rentButton {
        position: absolute;
        right: 0;
        top: 0;
        bottom: 0;
        margin: auto;
        border: 2px solid #262628;
        border-radius: 100px;
        width: 70px;
        height: 25px;
        background: white;
      }
      .Good_Sign_Price_Value {
        font-size: 12px;
        color: @gray-8;
        letter-spacing: 0;
      }
    }
    .safeguardMark {
      padding: 0 8px;
      img {
        width: 100%;
      }
    }
    .buy-out-tip {
      font-size: 11px;
      margin: 14px 0;
      color: @gray-8;
      padding-top: 14px;
      > span {
        &:first-child {
          color: rgba(255, 71, 84, 1);
          padding: 1px 6px;
          &::before {
            border-color: #ff505d;
          }
        }
        &:last-child {
          margin-left: 7px;
        }
      }
    }
    .padding-line {
      height: 20px;
      background: rgba(0, 0, 0, 0.1);
      width: 100%;
    }
    .ConfigCategoryPlane {
      margin: 15px 15px 0px 15px;
      .ConfigCategoryPlane_Item {
        margin-bottom: 5px;
        display: block;
        .ConfigCategoryPlane_Item_title {
          float: left;
          font-size: 14px;
          color: @gray-8;
          letter-spacing: 0;
          line-height: 30px;
        }
        .ConfigCategoryPlane_Item_subPlane {
          margin-left: 60px;
          min-height: 30px;
          .ConfigCategoryPlane_Item_subPlane_subItem_normal {
            margin-right: 16px;
            margin-bottom: 10px;
            color: #000000;
            letter-spacing: 0;
            text-align: center;
            font-size: 12px;
            display: inline-block;
            padding: 2px 7px;
          }
          .ConfigCategoryPlane_Item_subPlane_subItem_disable {
            margin-right: 16px;
            margin-bottom: 10px;
            color: #9b9b9b;
            letter-spacing: 0;
            text-align: center;
            font-size: 12px;
            display: inline-block;
            padding: 2px 7px;
          }
          .ConfigCategoryPlane_Item_subPlane_subItem_select {
            margin-right: 16px;
            color: #222222;
            letter-spacing: 0;
            background: @orange-tint;
            border: 1px solid @orange;
            border-radius: 3px;
            letter-spacing: 0;
            text-align: center;
            font-size: 12px;
            display: inline-block;
            padding: 2px 7px;
          }
        }
        .ConfigCategoryPlane_Fee_Item {
          position: relative;
          display: flex;
          justify-content: space-between;

          .ConfigCategoryPlane_Fee_Item_left {
            display: inline-block;
            font-size: 13px;
            color: #000000;
            letter-spacing: 0;
            line-height: 30px;
            .iconfont {
              font-size: 13px !important;
            }
            .icon-Raidobox-selectedRai1 {
              color: @orange;
            }
          }

          .ConfigCategoryPlane_Fee_Item_right {
            display: inline-block;
            right: 2px;
            font-size: 11px;
            /*color: #5C99F4;*/
            letter-spacing: 0;
            text-align: right;
            line-height: 30px;
            .iconfont {
              padding: 7px 0px 7px 14px;
            }
          }
        }
      }
    }
    .GoodsDetailPadding {
      background: #f4f4f4;
      width: 100%;
      height: 2px;
    }
    .GoodsDetailTabDeclarePlane {
      margin-bottom: 70px;
      .vux-tab .vux-tab-item.vux-tab-selected {
        color: #222 !important;
        border-bottom: 3px solid @orange;
      }
      .GoodsDetailTabDeclarePlane_GoodsDetail {
        .GoodsDetailTabDeclarePlane_GoodsDetail_img {
          width: 100%;
          height: 200px;
        }
      }
      .GoodsDetailTabDeclarePlane_txtDetail {
        line-height: 300px;
        text-align: center;
      }
      .GoodDetailTabDeclarePlane_hidden {
        display: none;
      }
      .GoodsDetailTabDeclarePlane_Plane {
        // text-align: center;
        width: 100%;
        min-height: 300px;
        font-size: 0; // 用于去掉图片之间的多余的间距
        padding-bottom: 20px; // 最后面间距一点点空隙
        .GoodsDetailTabDeclarePlane_Plane_img {
          width: 100%;
        }
        .GoodsDetailTabDeclarePlane_Plane_headline {
          font-size: 18px;
          padding-bottom: 10px;
          font-weight: bold;
        }
      }
    }
  }
  .GoodsDetail_Bottom_fixed {
    position: fixed;
    width: 100%;
    height: 48px;
    opacity: 0.91;
    background: #fbfbfb;
    bottom: 0;
    left: 0;
    right: 0;
    line-height: 2.5;
    .GoodsDetail_Bottom_fixed_Content {
      display: flex;
      justify-content: space-between;
      /*margin-left: 15px;*/
      /*margin-right: 15px;*/
      .leftSection {
        margin-left: 15px;
        margin-right: 10px;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        .GoodsDetail_Bottom_fixed_Content_left {
          /*float: left;*/
          display: inline-block;
        }
        .GoodsDetail_Bottom_fixed_Content_txt1 {
          font-size: 12px;
          letter-spacing: -0.2px;
        }
        .GoodsDetail_Bottom_fixed_Content_txt2 {
          font-size: 20px;
          color: #000000;
          letter-spacing: -0.2px;
          em {
            color: @red;
            font-style: normal;
            font-weight: bold;
          }
        }
        .GoodsDetail_Bottom_fixed_Content_txt3 {
          font-size: 12px;
          color: #000000;
          letter-spacing: -0.2px;
        }
      }
      .submitOrderBtn_normal {
        height: 100%;
        min-width: 120px;
        display: inline-block;
        font-size: 17px;
        color: #222222;
        text-align: center;
        background: @orange;
        line-height: 3;
      }
      .submitOrderBtn_disable {
        height: 100%;
        min-width: 120px;
        display: inline-block;
        font-size: 17px;
        color: #ffffff;
        text-align: center;
        background: #dddddd;
        line-height: 3;
      }
    }
  }
}
.dialog-demo {
  font-size: 16px;
  .showScrollBox_hd {
    padding: 1.3em 1.6em 0.5em;
    .showScrollBox_hd_title {
      font-weight: 400;
      font-size: 18px;
    }
  }
  .showScrollBox_bd {
    padding: 2px;
    min-height: 40px;
    font-size: 15px;
    line-height: 1.3;
    word-wrap: break-word;
    word-break: break-all;
    color: #999999;
  }
  .showScrollBox-dialog__ft {
    position: relative;
    line-height: 48px;
    font-size: 18px;
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    .border-1px-top();
    .showScrollBox-dialog__btn {
      display: block;
      -webkit-box-flex: 1;
      -webkit-flex: 1;
      flex: 1;
      color: #3cc51f;
      text-decoration: none;
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
      position: relative;
    }
    .showScrollBox-dialog__btn_primary {
      color: @orange;
    }
  }
}
</style>
